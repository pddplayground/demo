# Use Dockerized infrastructure
sudo: false

# Use node_js environnement
language: node_js
node_js:
  - "8"

# Cache Gcloud SDK between commands
cache:
  directories:
    - "$HOME/google-cloud-sdk/"

# Install services
services:
  - docker

# Set env vars
env:
  global:
    - GOOGLE_APPLICATION_CREDENTIALS=~/gcloud-service-key.json
    - PROJECT_NAME_STG=integral-sol-282108
    - CLUSTER_NAME_STG=demo-cluster-staging
    - PROJECT_NAME_PRD=integral-sol-282108
    - CLUSTER_NAME_PRD=demo-cluster-production
    - CLOUDSDK_COMPUTE_ZONE=us-central1-c
    - DOCKER_IMAGE_NAME=appexample
    - KUBE_DEPLOYMENT_NAME=appexample
    - KUBE_DEPLOYMENT_CONTAINER_NAME=appexample
    - NODE_ENV=CI

install:
  - npm install

script:
  - npm test

before_deploy:
  - if [ ! -d "$HOME/google-cloud-sdk/bin" ]; then rm -rf $HOME/google-cloud-sdk; export CLOUDSDK_CORE_DISABLE_PROMPTS=1; curl https://sdk.cloud.google.com | bash; fi
  - source /home/travis/google-cloud-sdk/path.bash.inc
  - gcloud --quiet version
  - gcloud --quiet components update
  # - gcloud --quiet components beta update
  - gcloud --quiet components update kubectl

deploy:
  - provider: script
    script: ./deploy-staging.sh
    skip_cleanup: true
    on:
      branch: development
  - provider: script
    script: ./deploy-production.sh
    skip_cleanup: true
    on:
      branch: master